services:
  db:
    image: pgvector/pgvector:0.8.0-pg17
    container_name: myapp-postgres-pgvector
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  message_parsing:
    build:
      context: ./message_parsing
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env

  rag_mcp_server:
    build:
      context: . # Use the root directory as the context
      dockerfile: ./retrival_mcp/Dockerfile # Specify the path to the Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - db

  ai_assistant:
    build:
      context: ./ai_assistants_server
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db

volumes:
  postgres_data: